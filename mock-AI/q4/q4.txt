Exploitation consiste em resolver um problema a partir de uma propriedade, explorando-a. Um exemplo aplicado
ao algoritmo da mochila binário foi dado na aula de busca local. Em uma das implementações, decidíamos qual
objeto adicionar na mochila ordenando pelo critério de objeto com o maior valor até que não coubesse mais
objetos. Apesar de ser possível encontrar resultados satisfatórias através do exploration, os resultados encontrados
podem ser os melhores localmente, ao invés de globalmente.

Por outro lado, exploration, como o nome diz, consiste em explorar o resultado adicionando variabilidade. Por,
exemplo, a solução da mochila binária que desenvolvemos na aula de aleatorização. Nessa solução, ordenávamos
aleatoriamente os objetos e os adicionávamos na mochila até que não coubessem mais objetos. Nesse caso especificamente,
praticamente só foi feito exploration, com pouquíssimo ou quase nenhum exploitation. Seria possível combinar
ambos, por exemplo, ordenando os objetos pelo valor e considerando uma probabilidade de 75% dele ser adicionado 
ao invés de um outro aleatório.

O benefício do exploitation é a previsibilidade e, em alguns casos específicos, vai ser possível encontrar a
melhor solução global sem fazer uma busca exaustiva. Já o exploration nos permite escapar das melhores soluções
locais, possibilitanto a busca da melhor global quando ela não é encontrada na primeira tentativa.